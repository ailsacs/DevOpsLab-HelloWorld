name: CI - Lint / Tests / Deploy

on: [push]

jobs:

  lint:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9.1
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  tests:
    needs: lint
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: 3.9.1

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Integrations Test
        run: | 
          python test.py


#  deploy:
#    needs: tests
#    runs-on: ubuntu-20.04
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Python 3.9.1
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.9.1
#
#      - name: deploy into heroku
#        uses: akhileshns/heroku-deploy@v3.12.12
#        with:
#          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
#          heroku_email: ${{secrets.HEROKU_USER_EMAIL}}
          

  deploy:
    needs: tests
    runs-on: ubuntu-20.04
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Set up Python 3.9.1
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.1
  
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1b  # Substitua pelo seu região
  
#      - name: Check if directory exists
#        run: |
#          if [ -d "/home/admin/" ]; then
#            echo "Directory already exists"
#          else
#            git clone https://github.com/ailsacs/DevOpsLab-HelloWorld.git /home/admin/DevOpsLab-HelloWorld
#          fi
  
      - name: Deploy to AWS EC2
        run: |
          # Navegue até o diretório do aplicativo
          cd /home/admin/DevOpsLab-HelloWorld
      
          # Execute o aplicativo Python (substitua "app.py" pelo nome do seu arquivo)
          python app.py &
      
          # Inicie um servidor web para disponibilizar o aplicativo
          nohup python -m http.server 80 &
        env:
          AWS_DEFAULT_REGION: us-east-1b  # Substitua pelo seu região
  
